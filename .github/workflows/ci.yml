name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:latest
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand(\"ping\")'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install server dependencies
        working-directory: ./server
        run: npm install

      - name: Create .env file
        working-directory: ./server
        run: |
          echo "MONGO_URI=${{ secrets.MONGO_URI }}"           > .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}"         >> .env
          echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}"     >> .env
          echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}" >> .env
          echo "GOOGLE_CALLBACK_URL=${{ secrets.GOOGLE_CALLBACK_URL }}"  >> .env

      - name: Run server unit tests
        working-directory: ./server
        run: npm test

      - name: Install client dependencies & build
        working-directory: ./client
        run: |
          npm install
          npm run build

      - name: Run end-to-end tests (start server, wait, run Cypress)
        run: |
          # 1) instala wait-on localmente
          cd server
          npm install --save-dev wait-on

          # 2) arranca el backend en background
          npm run start &

          # 3) espera hasta que http://localhost:5000 responda (timeout 60s)
          npx wait-on http://localhost:5000 --timeout 60000

          # 4) una vez up, ejecuta los tests de Cypress
          cd ../client
          npx cypress run

  deploy:
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Heroku
        uses: akhileshns/heroku-deploy@v3.13.15
        with:
          heroku_api_key:  ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: mighty-stream-43963
          heroku_email:    sr.sebas.ordonez@gmail.com
