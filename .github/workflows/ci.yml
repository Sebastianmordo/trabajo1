name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:latest
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand(\"ping\")'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install server dependencies
        working-directory: ./server
        run: npm install

      - name: Install wait-on
        working-directory: ./server
        run: npm install --save-dev wait-on

      - name: Create .env file
        working-directory: ./server
        run: |
          echo "MONGO_URI=${{ secrets.MONGO_URI }}"           >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}"         >> .env
          echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}"     >> .env
          echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}" >> .env
          echo "GOOGLE_CALLBACK_URL=${{ secrets.GOOGLE_CALLBACK_URL }}"  >> .env

      - name: Run server tests
        working-directory: ./server
        run: npm test

      - name: Install client dependencies
        working-directory: ./client
        run: npm install

      - name: Build client
        working-directory: ./client
        run: npm run build

      - name: Start backend (background)
        working-directory: ./server
        run: npm run start &

      - name: Wait for backend to be ready
        working-directory: ./server
        run: npx wait-on http://localhost:5000 --timeout 30000

      - name: Run Cypress tests
        working-directory: ./client
        run: npx cypress run

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Heroku CLI and deploy
        uses: akhileshns/heroku-deploy@v3.13.15
        with:
          heroku_api_key:    ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name:   mighty-stream-43963
          heroku_email:      sr.sebas.ordonez@gmail.com
